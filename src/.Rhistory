# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.nan(result)]))
return(result)
}
compare_sleep(c(0,0,1,1))
compare_sleep <- function(list_to_compare){
# function to calculate the amount of regularity of a sleeping-waking pattern
# calculate difference in status between days
result <- diff(list_to_compare)
cat(result)
# remove Nan-values for list of differences, add one to each difference (e.g. 0 (no difference) becomes 1 etc.) and
# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.nan(result)]))
cat(result)
return(result)
}
compare_sleep(c(0,0,1,1))
compare_sleep <- function(list_to_compare){
# function to calculate the amount of regularity of a sleeping-waking pattern
# calculate difference in status between days
result <- diff(list_to_compare)
print(result)
# remove Nan-values for list of differences, add one to each difference (e.g. 0 (no difference) becomes 1 etc.) and
# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.nan(result)]))
print(result)
return(result)
}
compare_sleep(c(0,0,1,1))
compare_sleep(c(0,0,NA,1,1))
r <- c(0,0,NA,0,0)
r[is.na(r)]
r[!is.na(r)]
compare_sleep <- function(list_to_compare){
# function to calculate the amount of regularity of a sleeping-waking pattern
# calculate difference in status between days
result <- diff(list_to_compare)
print(result)
# remove Nan-values for list of differences, add one to each difference (e.g. 0 (no difference) becomes 1 etc.) and
# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.na(result)]))
print(result)
return(result)
}
compare_sleep(c(0,0,NA,1,1))
compare_sleep <- function(list_to_compare){
# function to calculate the amount of regularity of a sleeping-waking pattern
# calculate difference in status between days
result <- diff(list_to_compare)
# remove Nan-values for list of differences, add one to each difference (e.g. 0 (no difference) becomes 1 etc.) and
# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.na(result)]))
#calculate mean percentage of consistent status
result <- sum(result)/length(result)
return(result)
}
compare_sleep(c(0,0,NA,1,1))
compare_sleep(c(0,0,NA,1,1,0,1,0))
compare_sleep(c(0,1,NA,1,1,0,1,0))
compare_sleep(c(1,1,NA,1,1,0,1,0))
compare_sleep(c(1,1,NA,1,1,1,1,0))
compare_sleep(c(1,1,NA,1,1,1,1,1))
compare_sleep <- function(list_to_compare){
# function to calculate the amount of regularity of a sleeping-waking pattern
# calculate difference in status between days
result <- diff(list_to_compare)
# remove Nan-values for list of differences, add one to each difference (e.g. 0 (no difference) becomes 1 etc.) and
# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.na(result)])+1)%%2
#calculate mean percentage of consistent status
result <- sum(result)/length(result)
return(result)
}
compare_sleep(c(1,1,NA,1,1,1,1,1))
compare_sleep(c(1,1,NA,1,1,0,1,1))
compare_sleep(c(1,0,NA,1,1,0,1,1))
compare_sleep(c(1,0,NA,0,1,0,1,1))
compare_sleep(c(0,0,NA,0,1,0,1,1))
compare_sleep(c(1,1,1,0))
?reshapes
library(stats)
# import module(s)
library(stats)
?reshapes
??reshape
help("reshape")
library(Rcmdr)
help("reshape")
help(matrix)
library(reshape2)
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
help(melt)
library(reshape2)
help(cast)
help(acast)
m <- c(0,1,1,0,1,0,1,0)
new_m <- matrix(data = m, 2, 4)
new_m
new_m <- matrix(data = m, 2, -1)
new_m[0]
new_m[1]
new_m[2]
new_m <- matrix(data = m, 4,2)
new_m[2]
new_m[2][1]
new_m
new_m[1]
new_m[1,]
help("matrix"
)
install.packages(comprehenr)
install.packages("comprehenr")
library(comprehenr)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in sleep_data) if (sum(!is.na(diff(i)))>0) compare_sleep(i))
return(round((200*mean(consistency)-0.5)), 2)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in sleep_data) if (sum(!is.na(diff(i)))>0) compare_sleep(i))
RSI <- (200*mean(consistency)-0.5)
return(round(RSI), 2)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
return(RSI)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in sleep_data) if (sum(!is.na(diff(i)))>0) compare_sleep(i))
RSI <- round((200*mean(consistency)-0.5),2)
return(RSI)
}
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
#consistency <- to_list(for (i in sleep_data) if (sum(!is.na(diff(i)))>0) compare_sleep(i))
for (i in sleep_data){
print(i)
}
}
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
#consistency <- to_list(for (i in sleep_data) if (sum(!is.na(diff(i)))>0) compare_sleep(i))
for (row in sleep_data){
print(sleep_data[row,])
}
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
for (row in 1:nrow(sleep_data)){
print(sleep_data[row,])
}
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
#consistency <- to_list(for (i in sleep_data) if (sum(!is.na(diff(i)))>0) compare_sleep(i))
for (row in 1:nrow(sleep_data)){
print(sleep_data[row,])
}
}
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
print(sleep_data)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
print(consistency)
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
compare_sleep <- function(list_to_compare){
# function to calculate the amount of regularity of a sleeping-waking pattern
# calculate difference in status between days
result <- diff(list_to_compare)
# remove Nan-values for list of differences, add one to each difference (e.g. 0 (no difference) becomes 1 etc.) and
# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.na(result)])+1)%%2
#calculate mean percentage of consistent status
result <- sum(result)/length(result)
print(result)
return(result)
}
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, len(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
consistency <- matrix(consistency, 1, length(consistency))
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
compare_sleep <- function(list_to_compare){
# function to calculate the amount of regularity of a sleeping-waking pattern
# calculate difference in status between days
result <- diff(list_to_compare)
# remove Nan-values for list of differences, add one to each difference (e.g. 0 (no difference) becomes 1 etc.) and
# calculate the residual when dividing by two (points where there is a difference will then be 1 and otherwise 0)
result <- ((result[!is.na(result)])+1)%%2
#calculate mean percentage of consistent status
result <- sum(result)/length(result)
return(result)
}
compare_sleep(c(1,1,1,0))
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
print(mean(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
print(mean(consistency))
print(str(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(colMeans(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
str(consistency)
print(colMeans(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
str(consistency)
print(colMeans(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
class(consistency)
print(colMeans(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
print(class(consistency))
print(colMeans(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
print(class(as.numeric(consistency)))
print(colMeans(consistency))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
print(class(as.numeric(consistency)))
print(colMeans(as.numeric(consistency)))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
print(consistency)
print(class(as.numeric(consistency)))
print(mean(as.numeric(consistency)))
# calculate RSI
RSI <- round((200*(mean(consistency)-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
SRI_SCORE <- function(data, daily_datapoints, days){
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
# calculate RSI
RSI <- round((200*(mean(as.numeric(consistency))-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
SRI_SCORE <- function(data, daily_datapoints, days){
# Function to calculate the Sleep Regularity Index (SRI) for the given data
# daily datapoints: 1440 (1-minute points), 2880 (30 second points)'''
# reshape data into seperate days according to the daily datapoints
sleep_data <- matrix(data, nrow = daily_datapoints, ncol = days)
# calculate list of consistency at all daily datapoints
consistency <- to_list(for (i in 1:nrow(sleep_data)) if (sum(!is.na(diff(sleep_data[i,])))>0) compare_sleep(sleep_data[i,]))
consistency <- matrix(consistency, 1, length(consistency))
# calculate RSI
RSI <- round((200*(mean(as.numeric(consistency))-0.5)),2)
return(RSI)
}
t <- c(0,0,1,1,0,0,0,1,0,1,1,1,0,0,1,1)
SRI_SCORE(t, daily_datapoints = 4, days = 4)
